{"remainingRequest":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\src\\pages\\Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\src\\pages\\Test.vue","mtime":1706372146807},{"path":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705726085541},{"path":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1705726085379},{"path":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1705726085541},{"path":"C:\\Users\\tadzh\\Downloads\\vuejs-bitrix24-ver2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1705726102679}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}